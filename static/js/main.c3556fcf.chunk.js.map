{"version":3,"sources":["logo.svg","redux/actions/types.js","components/features/navbar/Navbar.js","components/features/footer/Footer.js","context/context.js","components/features/modalCard/ModalCard.js","components/features/addButton/AddButton.js","components/features/removeButton/RemoveButton.js","components/features/buttons/Buttons.js","components/features/userList/UserList.js","components/features/pagination/PaginationPage.js","components/pages/Home.js","components/pages/NewUser.js","components/features/appRouter/AppRouter.js","components/features/container/Container.js","App.js","reportWebVitals.js","redux/reducers/users.js","redux/reducers/Index.js","redux/reducers/theme.js","index.js"],"names":["FILTER_EDIT_USERS","UPDATE_USERS","CHANGE_THEME","Navbar","dispatch","useDispatch","useState","theme","setTheme","className","Button","onClick","type","payload","toggleTheme","to","Footer","UserListContext","createContext","UserListProvider","Provider","UserContext","UserProvider","useUserContext","useContext","ModalCard","open","handleClose","style","nameRef","useRef","emailRef","locationRef","editedUser","users","item","setFlag","Modal","onClose","Box","component","onSubmit","e","preventDefault","nameValue","current","children","value","emailValue","locationValue","length","includes","toast","newUser","name","email","location","key","id","picture","contextUsers","validateForm","sx","noValidate","autoComplete","TextField","ref","label","placeholder","m","Stack","spacing","AddButton","setOpen","IconButton","color","position","top","left","transform","width","height","bgcolor","border","boxShadow","p","RemoveButton","Buttons","direction","UserList","ListItem","ListItemText","primary","secondary","Typography","display","fontSize","variant","ListItemAvatar","Avatar","src","Divider","PaginationPage","setPage","Pagination","renderItem","console","log","page","PaginationItem","changePage","count","Home","setUsers","mapUsers","fetch","then","json","items","results","num","list","newUsers","splice","map","title","first","last","street","number","city","country","login","uuid","medium","changeUsersPage","catch","useEffect","NewUser","justifyContent","alignItems","flexDirection","AppRouter","path","exact","element","Container","useSelector","state","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","a","usersList","action","updatedUsers","user","combineReducers","toggle","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3556fcf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// USERS\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const FILTER_EDIT_USERS = \"FILTER_EDIT_USERS\";\r\nexport const UPDATE_USERS = \"UPDATE_USERS\";\r\nexport const CHANGE_THEME = \"CHANGE_THEME\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport '../../styles/style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CHANGE_THEME } from '../../../redux/actions/types';\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const [theme, setTheme] = useState(true);\r\n\r\n    const changeTheme = () => {\r\n        setTheme(!theme);\r\n        dispatch({ type: CHANGE_THEME, payload: { toggleTheme: theme } });\r\n    }\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <Button onClick={() => changeTheme()}>{theme ? \"Dark\" : \"Light\"}</Button>\r\n            <h1>Lior app</h1>\r\n\r\n            <ul className=\"navbar-ul\">\r\n                <li className=\"navbar-li\">\r\n                    <Link className=\"navbar-link\" to=\"/\"> Home </Link>\r\n                </li>\r\n                <li className=\"navbar-li\">\r\n                    <Link className=\"navbar-link\" to=\"/AddUser\"> Add user </Link>\r\n                </li>\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"../../styles/style.css\";\r\n\r\nexport const Footer = () => {\r\n\r\n    return (\r\n        <div className=\"Footer-container\">\r\n            <div className=\"social-links\">\r\n                <ul className=\"social-links-list\">\r\n                    <li>Cookie Policy</li>\r\n                    <li>Cookie Settings</li>\r\n                    <li>Privacy Policy</li>\r\n                    <li>Terms of Service</li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport const UserListContext = createContext();\r\nexport const UserListProvider = UserListContext.Provider;\r\n\r\nexport const useUserListContext = () => {\r\n    return useContext(UserListContext);\r\n}\r\n// \r\nexport const UserContext = createContext();\r\nexport const UserProvider = UserContext.Provider;\r\n\r\nexport const useUserContext = () => {\r\n    return useContext(UserContext);\r\n}","import { useState, useRef } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\nimport { useDispatch } from 'react-redux';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Stack } from '@mui/material';\r\nimport { useUserListContext } from '../../../context/context';\r\nimport { FILTER_EDIT_USERS } from '../../../redux/actions/types';\r\nimport { useUserContext } from '../../../context/context';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const ModalCard = ({ open, handleClose, style }) => {\r\n    const nameRef = useRef(\"\");\r\n    const emailRef = useRef(\"\");\r\n    const locationRef = useRef(\"\");\r\n    const [editedUser, setEditedUser] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n    const { users, setFlag } = useUserListContext();\r\n    const { item } = useUserContext();\r\n\r\n\r\n    const validateForm = (e) => {\r\n        e.preventDefault();\r\n        const nameValue = nameRef.current.children[1].children[0].value;\r\n        const emailValue = emailRef.current.children[1].children[0].value;\r\n        const locationValue = locationRef.current.children[1].children[0].value;\r\n\r\n        if (nameValue.length < 3) return;\r\n        if (!emailValue.includes(\"@\")) return;\r\n        if (locationValue.length === \"\") return;\r\n        toast(\"User saved\");\r\n        const newUser = {\r\n            name: nameValue,\r\n            email: emailValue,\r\n            location: locationValue,\r\n            key: item.id,\r\n            picture: item.picture,\r\n            id: item.id\r\n        }\r\n        dispatch({ type: FILTER_EDIT_USERS, payload: { editedUser, newUser, contextUsers: users } });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box component=\"form\" onSubmit={(e) => validateForm(e)} sx={style}\r\n                    noValidate\r\n                    autoComplete=\"off\">\r\n                    <TextField\r\n                        ref={nameRef}\r\n                        id=\"outlined\"\r\n                        label=\"Name\"\r\n                        placeholder=\"Hello World\"\r\n                        sx={{ m: 2 }}\r\n                    />\r\n                    <TextField\r\n                        ref={emailRef}\r\n                        id=\"outlined\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Hello World\"\r\n                        sx={{ m: 2 }}\r\n                    />\r\n                    <TextField\r\n                        ref={locationRef}\r\n                        id=\"outlined\"\r\n                        label=\"Location\"\r\n                        placeholder=\"Hello World\"\r\n                        sx={{ m: 2 }}\r\n                    />\r\n                    <Stack spacing={2}>\r\n                        <Button type=\"submit\">Save</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </Stack>\r\n                </Box>\r\n            </Modal>\r\n            <ToastContainer />\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from 'react'\r\nimport '../../styles/style.css';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { ModalCard } from '../modalCard/ModalCard';\r\n\r\nexport const AddButton = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 300,\r\n        height: 500,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton onClick={handleOpen} color=\"primary\" aria-label=\"add to shopping cart\">\r\n                <EditIcon />\r\n            </IconButton>\r\n            <ModalCard style={style} open={open} handleClose={handleClose} />\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const RemoveButton = () => {\r\n    return (\r\n        <IconButton color=\"primary\" aria-label=\"remove to shopping cart\">\r\n            <DeleteIcon />\r\n        </IconButton>\r\n    );\r\n}\r\n","import React, { useState, } from 'react';\r\nimport { Stack } from '@mui/material';\r\nimport { AddButton } from '../addButton/AddButton';\r\nimport { RemoveButton } from '../removeButton/RemoveButton';\r\nexport const Buttons = ({ key }) => {\r\n    return (\r\n        <div className=\"button-container\">\r\n            <Stack direction=\"row\" spacing={1}>\r\n                <AddButton />\r\n                <RemoveButton />\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Buttons } from '../buttons/Buttons';\r\nimport { useUserContext } from '../../../context/context';\r\n\r\nexport const UserList = () => {\r\n    const { item } = useUserContext();\r\n    return (\r\n\r\n        <>\r\n            <ListItem >\r\n                <ListItemText\r\n\r\n                    primary=\"User\"\r\n                    secondary={\r\n                        <>\r\n                            <Typography\r\n                                sx={{ display: 'inline', fontSize: \"1.3rem\" }}\r\n                                component=\"h3\"\r\n                                variant=\"div\"\r\n\r\n                            >\r\n                                {item.name}\r\n\r\n                            </Typography>\r\n                            <Typography\r\n                                sx={{ fontSize: \"1.2rem\" }}\r\n                                component=\"h6\"\r\n                                variant=\"p\"\r\n                                color=\"white\"\r\n                            >\r\n                                {item?.location}\r\n                            </Typography>\r\n                            <Typography\r\n                                sx={{ fontSize: \"1rem\" }}\r\n                                component=\"h6\"\r\n                                variant=\"p\"\r\n                                color=\"white\"\r\n                            >\r\n                                {item?.email}\r\n\r\n                            </Typography>\r\n                            <Typography\r\n                                sx={{ fontSize: \"1rem\" }}\r\n                                component=\"h6\"\r\n                                variant=\"p\"\r\n                                color=\"white\"\r\n                            >\r\n                                {item?.id}\r\n\r\n                            </Typography>\r\n\r\n                        </>\r\n                    }\r\n                />\r\n                <ListItemAvatar >\r\n                    <Avatar sx={{ width: \"70px\", height: \"70px\" }} src={item?.picture} />\r\n\r\n                </ListItemAvatar>\r\n                <Buttons />\r\n\r\n            </ListItem>\r\n\r\n            <Divider />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { PaginationItem } from '@mui/material';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useDispatch } from 'react-redux';\r\nimport '../../styles/style.css';\r\n\r\nexport const PaginationPage = ({ setPage }) => {\r\n    const changePage = (item) => {\r\n        console.log(item.page);\r\n        setPage(item.page);\r\n        return < PaginationItem {...item} />\r\n    }\r\n    return (\r\n        <div className=\"pagination-container\">\r\n            <Stack spacing={2}>\r\n                <Pagination renderItem={(item) => changePage(item)} count={5} variant=\"outlined\">\r\n                </Pagination>\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { UPDATE_USERS } from '../../redux/actions/types';\r\nimport '../styles/style.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { UserList } from '../features/userList/UserList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { PaginationPage } from '../features/pagination/PaginationPage';\r\nimport { UserListProvider, UserProvider } from '../../context/context';\r\n\r\nexport const Home = () => {\r\n    const [users, setUsers] = useState([{}]);\r\n    const [page, setPage] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeUsersPage = (num, list) => {\r\n        const newUsers = list.splice(num * 2, 4).map((item) => {\r\n            return {\r\n                name: `${item.name.title} ${item?.name?.first} ${item?.name?.last} `,\r\n                location: `${item?.location?.street.name}\r\n                    ${item?.location?.street.number}\r\n                    ${item?.location?.city}\r\n                    ${item?.location?.country}`,\r\n                email: `${item?.email}`,\r\n                id: `${item?.login?.uuid}`,\r\n                picture: `${item?.picture?.medium}`\r\n            }\r\n        });\r\n        setUsers(newUsers);\r\n        dispatch({ type: UPDATE_USERS, payload: { users: newUsers } });\r\n    }\r\n\r\n    const mapUsers = () => {\r\n        return fetch(`https://randomuser.me/api/?results=100`)\r\n            .then(users => users.json())\r\n            .then(items => items.results)\r\n            .then(users => changeUsersPage(page, users))\r\n            .catch(e => console.log(e));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        mapUsers();\r\n    }, [page])\r\n\r\n\r\n    return (\r\n        <UserListProvider value={{ users, setUsers }}>\r\n            <div className=\"users-list-container\" >\r\n                {users?.map((item) => <UserProvider value={{ item }}><UserList /></UserProvider>)}\r\n            </div>\r\n            <PaginationPage setPage={setPage} />\r\n\r\n        </UserListProvider>\r\n    )\r\n}\r\n","import { useState, useRef } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Stack } from '@mui/material';\r\nimport '../styles/style.css';\r\n\r\n\r\nexport const NewUser = () => {\r\n    const style = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        flexDirection: \"column\",\r\n\r\n\r\n    }\r\n    return (\r\n        <form className=\"form-container\">\r\n            <Box component=\"form\"\r\n                sx={style}\r\n                noValidate\r\n                autoComplete=\"off\">\r\n                <TextField\r\n                    // ref={nameRef}\r\n                    id=\"outlined\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Hello World\"\r\n                    sx={{ m: 2 }}\r\n                />\r\n                <TextField\r\n                    // ref={emailRef}\r\n                    id=\"outlined\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Hello World\"\r\n                    sx={{ m: 2 }}\r\n                />\r\n                <TextField\r\n                    // ref={locationRef}\r\n                    id=\"outlined\"\r\n                    label=\"Location\"\r\n                    placeholder=\"Hello World\"\r\n                    sx={{ m: 2 }}\r\n                />\r\n                <Stack spacing={2}>\r\n                    <Button type=\"submit\">Save</Button>\r\n                    <Button>Cancel</Button>\r\n                </Stack>\r\n            </Box>\r\n\r\n        </form>);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navbar } from '../navbar/Navbar';\r\nimport '../../styles/style.css';\r\nimport { Footer } from '../footer/Footer';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes, Route\r\n} from \"react-router-dom\";\r\nimport { Home } from '../../pages/Home';\r\nimport { NewUser } from '../../pages/NewUser';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <>\r\n                <Navbar />\r\n                <Routes>\r\n                    <Route path=\"/\" exact element={<Home />} />\r\n                    <Route path=\"/AddUser\" element={<NewUser />} />\r\n                    <Route path=\"/appsForce\" element={<Home />} />\r\n                </Routes>\r\n                <Footer />\r\n            </>\r\n        </Router >\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport '../../styles/style.css';\r\nimport { AppRouter } from '../appRouter/AppRouter';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport const Container = () => {\r\n    const theme = useSelector(state => state.theme.toggleTheme);\r\n    return (\r\n        <div className={theme}>\r\n            <AppRouter />\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\r\nimport './components/styles/style.css';\r\nimport { Container } from './components/features/container/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { FILTER_EDIT_USERS, UPDATE_USERS } from \"../actions/types\";\r\n\r\nexport const users = async (usersList = [{}], action) => {\r\n    switch (action.type) {\r\n        case UPDATE_USERS:\r\n            const { users } = action.payload;\r\n            return users;\r\n        case FILTER_EDIT_USERS:\r\n            const { editedUser, newUser, contextUsers } = action.payload;\r\n            const updatedUsers = contextUsers.map(user => user.id !== newUser.id ? user : newUser);\r\n            return updatedUsers;\r\n        default:\r\n            return usersList;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { users } from './users';\r\nimport { theme } from './theme';\r\n\r\nexport default combineReducers({\r\n    users,\r\n    theme\r\n});\r\n","import { CHANGE_THEME } from '../actions/types';\r\n\r\nexport const theme = (toggle = { toggleTheme: 'light' }, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_THEME:\r\n            if (action.payload.toggleTheme) {\r\n                return { toggleTheme: 'dark' };\r\n            }\r\n            return { toggleTheme: 'light' };\r\n        default:\r\n            return toggle;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './redux/reducers/Index';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}